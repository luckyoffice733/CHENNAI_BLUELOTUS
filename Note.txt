Note:
------
If class does not have any constructor compiler will provide default constructor

if class contains default constructor only then compiler will not provide 
any parameterized constructor

if class contains parameterized constructor only then compiler will not provide 
any default constructor.


this keyword:
==============
this is a keyword refers to current class object.

by using this keyword we can call  instance variables and instance methods in another instance method.

by using this()/this(if parameter any )  we can constructor in another constructor

Note
=====
this keyword/ this()  won't be accessed  in static methods.


Assignment:
===========  
Copy Constructor with example.

Call by value and  call by object(passing an object) with example.


Encapsulation:
==============
The process of binding or wrapping  of
data members and member methods as single unit is called Encapsulation.


ex:
---
class


class A{

   //variables  //data members
   // methods  // member methods
 
}

Java bean/ POJO(plain old java object) class is called encapsulated class

what java bean?

A class which contain private access modifier instance variables followed by Getters and Setters.


Inheritance:
============
The process of acquiring the properties and behaviour from  the parent/super class
to child class/sub class.

Inheritance is also called as is-a relation ship.

the main advantage of inheritance is code reusability.

in java every class implicitly extends Object.

Object is the super class for all the classes.

Types:
------
single
multiple
multilevel
hybrid
hierarchal

Assignment:
===========
call by value and call by object(passing an object)
Has-a relation 
Aggregation --- loosely coupled
Composition --- tightly coupled

// var-args(...) -- [] 


public void addition(int x,int y){

}

--> methodSignature

addition(int,int)



public String sayHello(String msg){
  return "";

}

---> sayHello(String);



MethodOverLoading:
==================
In a class having same method name but differs in:

1) No of parameters
2) Differs in data type
3) Order of the type



















